import tkinter as tk
from tkinter import messagebox
import math

# Simple Calculator - Day 1

def add():
    calculate("+")

def subtract():
    calculate("-")

def multiply():
    calculate("*")

def divide():
    calculate("/")

def power():
    calculate("^")

def square_root():
    calculate("√")

def modulus():
    calculate("%")

def sin_func():
    calculate("sin")

def cos_func():
    calculate("cos")

def tan_func():
    calculate("tan")

def log_func():
    calculate("log")

def ln_func():
    calculate("ln")

# Day 9: Added history logging to a file
def log_calculation(expression, result):
    with open("calculations.txt", "a") as file:
        file.write(f"{expression} = {result}\n")

# Function to perform calculation
def calculate(operation):
    try:
        num1 = float(entry_num1.get())

        if operation in {"+", "-", "*", "/", "^", "%"}:
            num2 = float(entry_num2.get())
            if operation == "+":
                result = num1 + num2
            elif operation == "-":
                result = num1 - num2
            elif operation == "*":
                result = num1 * num2
            elif operation == "/":
                if num2 == 0:
                    messagebox.showerror("Error", "Division by zero is not allowed!")
                    return
                result = num1 / num2
            elif operation == "^":
                result = num1 ** num2
            elif operation == "%":
                if num2 == 0:
                    messagebox.showerror("Error", "Modulus by zero is not allowed!")
                    return
                result = num1 % num2
            expression = f"{num1} {operation} {num2}"
        
        else:
            if operation == "√":
                if num1 < 0:
                    messagebox.showerror("Error", "Square root of negative numbers is not allowed!")
                    return
                result = math.sqrt(num1)
                expression = f"√({num1})"
            elif operation == "sin":
                result = math.sin(math.radians(num1))
                expression = f"sin({num1})"
            elif operation == "cos":
                result = math.cos(math.radians(num1))
                expression = f"cos({num1})"
            elif operation == "tan":
                if num1 % 90 == 0 and (num1 // 90) % 2 != 0:
                    messagebox.showerror("Error", "tan is undefined for this angle!")
                    return
                result = math.tan(math.radians(num1))
                expression = f"tan({num1})"
            elif operation == "log":
                if num1 <= 0:
                    messagebox.showerror("Error", "Logarithm of non-positive numbers is not allowed!")
                    return
                result = math.log10(num1)
                expression = f"log({num1})"
            elif operation == "ln":
                if num1 <= 0:
                    messagebox.showerror("Error", "Natural logarithm of non-positive numbers is not allowed!")
                    return
                result = math.log(num1)
                expression = f"ln({num1})"

        label_result.config(text=f"Result: {result}")
        log_calculation(expression, result)

    except ValueError:
        messagebox.showerror("Error", "Please enter valid numbers!")

# GUI Setup
root = tk.Tk()
root.title("Scientific Calculator")

tk.Label(root, text="Enter first number:").grid(row=0, column=0)
entry_num1 = tk.Entry(root)
entry_num1.grid(row=0, column=1)

tk.Label(root, text="Enter second number (if needed):").grid(row=1, column=0)
entry_num2 = tk.Entry(root)
entry_num2.grid(row=1, column=1)

tk.Button(root, text="+", command=add).grid(row=2, column=0)
tk.Button(root, text="-", command=subtract).grid(row=2, column=1)
tk.Button(root, text="*", command=multiply).grid(row=3, column=0)
tk.Button(root, text="/", command=divide).grid(row=3, column=1)
tk.Button(root, text="^ (Power)", command=power).grid(row=4, column=0)
tk.Button(root, text="√ (Square Root)", command=square_root).grid(row=4, column=1)
tk.Button(root, text="% (Modulus)", command=modulus).grid(row=5, column=0)
tk.Button(root, text="sin", command=sin_func).grid(row=6, column=0)
tk.Button(root, text="cos", command=cos_func).grid(row=6, column=1)
tk.Button(root, text="tan", command=tan_func).grid(row=7, column=0)
tk.Button(root, text="log", command=log_func).grid(row=7, column=1)
tk.Button(root, text=
