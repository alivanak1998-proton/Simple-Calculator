import tkinter as tk
from tkinter import messagebox
import math

# تغییر تم به تاریک
BG_COLOR = "#2E2E2E"
FG_COLOR = "#FFFFFF"
BTN_COLOR = "#444444"
BTN_HOVER = "#555555"

def on_enter(e):
    e.widget["bg"] = BTN_HOVER

def on_leave(e):
    e.widget["bg"] = BTN_COLOR

def add():
    calculate("+")

def subtract():
    calculate("-")

def multiply():
    calculate("*")

def divide():
    calculate("/")

def power():
    calculate("^")

def square_root():
    calculate("√")

def modulus():
    calculate("%")

def sin_func():
    calculate("sin")

def cos_func():
    calculate("cos")

def tan_func():
    calculate("tan")

def log_func():
    calculate("log")

def ln_func():
    calculate("ln")

# Log history
def log_calculation(expression, result):
    with open("calculations.txt", "a") as file:
        file.write(f"{expression} = {result}\n")

# Perform calculation
def calculate(operation):
    try:
        num1 = float(entry_num1.get())

        if operation in {"+", "-", "*", "/", "^", "%"}:
            num2 = float(entry_num2.get())
            if operation == "+":
                result = num1 + num2
            elif operation == "-":
                result = num1 - num2
            elif operation == "*":
                result = num1 * num2
            elif operation == "/":
                if num2 == 0:
                    messagebox.showerror("Error", "Cannot divide by zero!")
                    return
                result = num1 / num2
            elif operation == "^":
                result = num1 ** num2
            elif operation == "%":
                if num2 == 0:
                    messagebox.showerror("Error", "Cannot mod by zero!")
                    return
                result = num1 % num2
            expression = f"{num1} {operation} {num2}"
        
        else:
            if operation == "√":
                if num1 < 0:
                    messagebox.showerror("Error", "Square root of negative numbers is not allowed!")
                    return
                result = math.sqrt(num1)
                expression = f"√({num1})"
            elif operation == "sin":
                result = math.sin(math.radians(num1))
                expression = f"sin({num1})"
            elif operation == "cos":
                result = math.cos(math.radians(num1))
                expression = f"cos({num1})"
            elif operation == "tan":
                if num1 % 90 == 0 and (num1 // 90) % 2 != 0:
                    messagebox.showerror("Error", "tan is undefined for this angle!")
                    return
                result = math.tan(math.radians(num1))
                expression = f"tan({num1})"
            elif operation == "log":
                if num1 <= 0:
                    messagebox.showerror("Error", "Logarithm of non-positive numbers is not allowed!")
                    return
                result = math.log10(num1)
                expression = f"log({num1})"
            elif operation == "ln":
                if num1 <= 0:
                    messagebox.showerror("Error", "Natural logarithm of non-positive numbers is not allowed!")
                    return
                result = math.log(num1)
                expression = f"ln({num1})"

        label_result.config(text=f"Result: {result}")
        log_calculation(expression, result)

    except ValueError:
        messagebox.showerror("Error", "Please enter valid numbers!")

# GUI Setup
root = tk.Tk()
root.title("Scientific Calculator")
root.configure(bg=BG_COLOR)

tk.Label(root, text="Enter first number:", bg=BG_COLOR, fg=FG_COLOR).grid(row=0, column=0)
entry_num1 = tk.Entry(root, bg=BTN_COLOR, fg=FG_COLOR)
entry_num1.grid(row=0, column=1)

tk.Label(root, text="Enter second number (if needed):", bg=BG_COLOR, fg=FG_COLOR).grid(row=1, column=0)
entry_num2 = tk.Entry(root, bg=BTN_COLOR, fg=FG_COLOR)
entry_num2.grid(row=1, column=1)

buttons = [
    ("+", add), ("-", subtract), ("*", multiply), ("/", divide),
    ("^ (Power)", power), ("√ (Square Root)", square_root),
    ("% (Modulus)", modulus), ("sin", sin_func), ("cos", cos_func),
    ("tan", tan_func), ("log", log_func), ("ln", ln_func)
]

row_num = 2
col_num = 0

for text, command in buttons:
    btn = tk.Button(root, text=text, command=command, bg=BTN_COLOR, fg=FG_COLOR, activebackground=BTN_HOVER)
    btn.grid(row=row_num, column=col_num, sticky="ew")
    btn.bind("<Enter>", on_enter)
    btn.bind("<Leave>", on_leave)

    col_num += 1
    if col_num > 1:
        col_num = 0
        row_num += 1

label_result = tk.Label(root, text="Result: ", bg=BG_COLOR, fg=FG_COLOR)
label_result.grid(row=row_num + 1, column=0, columnspan=2)

root.mainloop()
